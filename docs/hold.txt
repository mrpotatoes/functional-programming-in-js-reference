---------------------------
> This is a type where we specify the shape of each of the elements. Wikipedia has a thorough discussion. "Algebraic" refers to the property that an Algebraic Data Type is created by "algebraic" operations. The "algebra" here is "sums" and "products":
> 
> "sum" is alternation (A | B, meaning A or B but not both)
> 
> "product" is combination (A B, meaning A and B together)

\- [Haskell](https://wiki.haskell.org/Algebraic_data_type)
---------------------------

# Maths
* https://whatis.techtarget.com/definition/union-symbol
* https://whatis.techtarget.com/definition/intersection-symbol

$$
	A = \{ a, b, c \}
$$

$$ 
\text{bool} \cup \text{int} = \left\{\text{true}, \text{false}, \cdots, -2, -1, 0, 1, 2, \cdots \right\}bool∪int={true,false,⋯,−2,−1,0,1,2,⋯}
$$ 



<!-- # Infos -->

<!-- # Tagged
# Tagged Sums -->


# Sample Code

```js

```

<!-- 

** Bibliography, or notes to self **

https://github.com/paldepind/union-type/
	- An example ES5 repo that isn't Daggy.

https://waleedkhan.name/blog/union-vs-sum-types/
	- For theory.
	- Handling nulls and such.

https://dev.to/moosch/sum-types-in-javascript-15il
	- For showing how it works with a switch statement.

https://folktale.origamitower.com/api/v2.1.0/en/folktale.adt.union.union.union.html
	- For these titles:
		- Why use tagged unions?
		- Modelling data with adt/union
		- Providing common functionality

https://github.com/hemanth/functional-programming-jargon#algebraic-data-type
	- So many terms but not enough information.

https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types
	- If I wanna try to be really smart
		- Prolly don't.

https://www.youtube.com/watch?v=Up7LcbGZFuo
	- Domain Modeling Made Functional - Scott Wlaschin

https://medium.com/@notgiorgi/algebraic-data-types-explained-in-statically-typed-javascript-4ad31c2b12c9
	- Lots of theory

https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/sum-types
	- A Haskell description

-->
